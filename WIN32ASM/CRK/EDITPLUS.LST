Microsoft (R) Macro Assembler Version 6.14.8444		    10/01/03 11:41:15
E:\PROGRA~1\WIN32ASM\editplus.asm			     Page 1 - 1


				.386                             
				.model	flat,stdcall             
				option 	casemap:none             
				.nolist
				.listall
				includelib e:\masm32\lib\user32.lib            
				includelib e:\masm32\lib\kernel32.lib          
 00000000			.data?                           
 00000000 00000000		hinst	HINSTANCE	?
 00000004 0000			buff	dw		?
 00000000			.const
 00000000 45 64 69 74 50	title1	db	'EditPlus 2.10C Crack',13,10
	   6C 75 73 20 32
	   2E 31 30 43 20
	   43 72 61 63 6B
	   0D 0A
 00000016  3D 3D 3D 3D 3D		db	'=====================',13,10,13,10
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 0D 0A 0D 0A
 0000002F  50 72 6F 74 65		db	'Protection: Time Limit',13,10
	   63 74 69 6F 6E
	   3A 20 54 69 6D
	   65 20 4C 69 6D
	   69 74 0D 0A
 00000047  46 69 6C 65 20		db	'File to Patch: editplus.exe',13,10
	   74 6F 20 50 61
	   74 63 68 3A 20
	   65 64 69 74 70
	   6C 75 73 2E 65
	   78 65 0D 0A
 00000064  46 69 6C 65 73		db	'Filesize: 1207808 Bytes',13,10,13,10
	   69 7A 65 3A 20
	   31 32 30 37 38
	   30 38 20 42 79
	   74 65 73 0D 0A
	   0D 0A
 0000007F  52 75 6E 20 74		db	'Run this patch in the same directory where the .exe file is located.',0
	   68 69 73 20 70
	   61 74 63 68 20
	   69 6E 20 74 68
	   65 20 73 61 6D
	   65 20 64 69 72
	   65 63 74 6F 72
	   79 20 77 68 65
	   72 65 20 74 68
	   65 20 2E 65 78
	   65 20 66 69 6C
	   65 20 69 73 20
	   6C 6F 63 61 74
	   65 64 2E 00
 000000C4 44 49 41 4C 4F	dialog	db	'DIALOG_3',0
	   47 5F 33 00
 000000CD 44 49 41 4C 4F	abtdlg	db	'DIALOG_2',0
	   47 5F 32 00
 000000D6 23 33 32 37 37	dlgclass db	'#32770',0
	   30 00
 000000DD 49 43 4F 4E 31	icn	db	'ICON1',0
	   00
 000000E3 65 64 69 74 70	file	db	'editplus.exe',0
	   6C 75 73 2E 65
	   78 65 00
 000000F0 65 64 69 74 70	bfile	db	'editplus.bak',0
	   6C 75 73 2E 62
	   61 6B 00
 000000FD 43 61 6E 6E 6F	err1	db	"Cannot Open File editplus.exe",0
	   74 20 4F 70 65
	   6E 20 46 69 6C
	   65 20 65 64 69
	   74 70 6C 75 73
	   2E 65 78 65 00
 0000011B 45 52 52 4F 52	err2	db	'ERROR: File Size Mismatch',0
	   3A 20 46 69 6C
	   65 20 53 69 7A
	   65 20 4D 69 73
	   6D 61 74 63 68
	   00
 00000135 45 52 52 4F 52	err3	db	'ERROR: File already patched or different',0
	   3A 20 46 69 6C
	   65 20 61 6C 72
	   65 61 64 79 20
	   70 61 74 63 68
	   65 64 20 6F 72
	   20 64 69 66 66
	   65 72 65 6E 74
	   00
 0000015E 53 55 43 43 45	success	db	'SUCCESS: File Patch Successful :)',0
	   53 53 3A 20 46
	   69 6C 65 20 50
	   61 74 63 68 20
	   53 75 63 63 65
	   73 73 66 75 6C
	   20 3A 29 00
 00000180 00126E00		size1	dd	1207808d
 00000184 00029AD7		offs	dd	00029ad7h
 00000188 0075			data	dw	75h
 0000018A 74			data1	db	74h
 = 00000002			IDEXIT		equ	2
 = 00000066			IDABOUT		equ	102
 = 00000067			IDSTAT		equ	103
 = 00000069			IDEDIT		equ	105
 = 00000001			IDCRACK		equ	1
 = 00000067			IDOK1		equ	103
				dlgproc		proto hwnd:HWND,uMsg:UINT,wparam:WPARAM,lparam:LPARAM
				abtdlgproc 	proto hwnd:HWND,uMsg:UINT,wparam:WPARAM,lparam:LPARAM
 00000000			.code                            
 00000000			start:                           
 00000000				invoke	GetModuleHandle,0
 00000000  6A 00	   *	    push   +000000000h
 00000002  E8 00000000 E   *	    call   GetModuleHandleA
 00000007  A3 00000000 R		mov	[hinst],eax
					invoke	DialogBoxParam,hinst,addr dialog,0,addr dlgproc,0
 0000000C  6A 00	   *	    push   +000000000h
 0000000E  68 0000002C R   *	    push   dlgproc
 00000013  6A 00	   *	    push   +000000000h
 00000015  68 000000C4 R   *	    push   OFFSET dialog
 0000001A  FF 35 00000000 R *	    push   hinst
 00000020  E8 00000000 E   *	    call   DialogBoxParamA
					invoke	ExitProcess,0
 00000025  6A 00	   *	    push   +000000000h
 00000027  E8 00000000 E   *	    call   ExitProcess
					
 0000002C 0000002C		dlgproc	proc hwnd:HWND,uMsg:UINT,wparam:WPARAM,lparam:LPARAM
				local	hicon:HWND
				local	hfile:HWND		
				local	buthwnd:HWND
 0000002C  55		   *	    push   ebp
 0000002D  8B EC	   *	    mov    ebp, esp
 0000002F  83 C4 F4	   *	    add    esp, 0FFFFFFF4h
					.if	uMsg==WM_INITDIALOG
 00000032  81 7D 0C
	   00000110	   *	    cmp    uMsg, WM_INITDIALOG
 00000039  75 39	   *	    jne    @C0001
						invoke	LoadIcon,hinst,addr icn
 0000003B  68 000000DD R   *	    push   OFFSET icn
 00000040  FF 35 00000000 R *	    push   hinst
 00000046  E8 00000000 E   *	    call   LoadIconA
 0000004B  89 45 FC				mov	hicon,eax
						invoke	SendMessage,hwnd,WM_SETICON,ICON_SMALL,hicon
 0000004E  FF 75 FC	   *	    push   dword  ptr ss:[ebp]+0FFFFFFFCh
 00000051  6A 00	   *	    push   +000000000h
 00000053  68 00000080	   *	    push   +000000080h
 00000058  FF 75 08	   *	    push   dword  ptr ss:[ebp]+000000008h
 0000005B  E8 00000000 E   *	    call   SendMessageA
						invoke	SetDlgItemText,hwnd,IDEDIT,addr title1
 00000060  68 00000000 R   *	    push   OFFSET title1
 00000065  6A 69	   *	    push   +000000069h
 00000067  FF 75 08	   *	    push   dword  ptr ss:[ebp]+000000008h
 0000006A  E8 00000000 E   *	    call   SetDlgItemTextA
					.elseif	uMsg==WM_COMMAND
 0000006F  E9 00000144	   *	    jmp    @C0003
 00000074		   *@C0001:
 00000074  81 7D 0C
	   00000111	   *	    cmp    uMsg, WM_COMMAND
 0000007B  0F 85 0000012E  *	    jne    @C0004
 00000081  8B 45 10				mov	eax,wparam
						.if	ax==IDCRACK
 00000084  66| 83 F8 01	   *	    cmp    ax, IDCRACK
 00000088  0F 85 000000ED  *	    jne    @C0006
							invoke	_lopen,offset file,OF_READWRITE
 0000008E  6A 02	   *	    push   +000000002h
 00000090  68 000000E3 R   *	    push   dword  ptr OFFSET FLAT:file
 00000095  E8 00000000 E   *	    call   _lopen
							.if	eax==-1
 0000009A  83 F8 FF	   *	    cmp    eax, - 001h
 0000009D  75 14	   *	    jne    @C0008
								invoke	SetDlgItemText,hwnd,IDSTAT,addr err1
 0000009F  68 000000FD R   *	    push   OFFSET err1
 000000A4  6A 67	   *	    push   +000000067h
 000000A6  FF 75 08	   *	    push   dword  ptr ss:[ebp]+000000008h
 000000A9  E8 00000000 E   *	    call   SetDlgItemTextA
							.else
 000000AE  E9 00000105	   *	    jmp    @C000A
 000000B3		   *@C0008:
 000000B3  89 45 F8						mov	hfile,eax			
								invoke	GetDlgItem,hwnd,IDCRACK
 000000B6  6A 01	   *	    push   +000000001h
 000000B8  FF 75 08	   *	    push   dword  ptr ss:[ebp]+000000008h
 000000BB  E8 00000000 E   *	    call   GetDlgItem
 000000C0  89 45 F4						mov	buthwnd,eax
								invoke	GetFileSize,hfile,0
 000000C3  6A 00	   *	    push   +000000000h
 000000C5  FF 75 F8	   *	    push   dword  ptr ss:[ebp]+0FFFFFFF8h
 000000C8  E8 00000000 E   *	    call   GetFileSize
								.if	eax!=size1
 000000CD  3B 05 00000180 R *	    cmp    eax, size1
 000000D3  74 14	   *	    je     @C000B
									invoke	SetDlgItemText,hwnd,IDSTAT,addr err2
 000000D5  68 0000011B R   *	    push   OFFSET err2
 000000DA  6A 67	   *	    push   +000000067h
 000000DC  FF 75 08	   *	    push   dword  ptr ss:[ebp]+000000008h
 000000DF  E8 00000000 E   *	    call   SetDlgItemTextA
								.else
 000000E4  E9 00000090	   *	    jmp    @C000D
 000000E9		   *@C000B:
									invoke	_llseek,hfile,offs,FILE_BEGIN
 000000E9  6A 00	   *	    push   +000000000h
 000000EB  FF 35 00000184 R *	    push   offs
 000000F1  FF 75 F8	   *	    push   dword  ptr ss:[ebp]+0FFFFFFF8h
 000000F4  E8 00000000 E   *	    call   _llseek
									invoke	_lread,hfile,offset buff,2
 000000F9  6A 02	   *	    push   +000000002h
 000000FB  68 00000004 R   *	    push   dword  ptr OFFSET FLAT:buff
 00000100  FF 75 F8	   *	    push   dword  ptr ss:[ebp]+0FFFFFFF8h
 00000103  E8 00000000 E   *	    call   _lread
 00000108  66| A1							mov	ax,data
	   00000188 R
									.if	buff!=ax
 0000010E  66| 39 05
	   00000004 R	   *	    cmp    buff, ax
 00000115  74 11	   *	    je     @C000E
										invoke	SetDlgItemText,hwnd,IDSTAT,addr err3
 00000117  68 00000135 R   *	    push   OFFSET err3
 0000011C  6A 67	   *	    push   +000000067h
 0000011E  FF 75 08	   *	    push   dword  ptr ss:[ebp]+000000008h
 00000121  E8 00000000 E   *	    call   SetDlgItemTextA
									.else
 00000126  EB 51	   *	    jmp    @C0010
 00000128		   *@C000E:
										invoke	_llseek,hfile,offs,FILE_BEGIN
 00000128  6A 00	   *	    push   +000000000h
 0000012A  FF 35 00000184 R *	    push   offs
 00000130  FF 75 F8	   *	    push   dword  ptr ss:[ebp]+0FFFFFFF8h
 00000133  E8 00000000 E   *	    call   _llseek
										invoke	CopyFile,offset file,offset bfile,FALSE
 00000138  6A 00	   *	    push   +000000000h
 0000013A  68 000000F0 R   *	    push   dword  ptr OFFSET FLAT:bfile
 0000013F  68 000000E3 R   *	    push   dword  ptr OFFSET FLAT:file
 00000144  E8 00000000 E   *	    call   CopyFileA
										invoke	_lwrite,hfile,offset data1,2
 00000149  6A 02	   *	    push   +000000002h
 0000014B  68 0000018A R   *	    push   dword  ptr OFFSET FLAT:data1
 00000150  FF 75 F8	   *	    push   dword  ptr ss:[ebp]+0FFFFFFF8h
 00000153  E8 00000000 E   *	    call   _lwrite
										invoke	_lclose,hfile
 00000158  FF 75 F8	   *	    push   dword  ptr ss:[ebp]+0FFFFFFF8h
 0000015B  E8 00000000 E   *	    call   _lclose
										invoke	SetDlgItemText,hwnd,IDSTAT,addr success
 00000160  68 0000015E R   *	    push   OFFSET success
 00000165  6A 67	   *	    push   +000000067h
 00000167  FF 75 08	   *	    push   dword  ptr ss:[ebp]+000000008h
 0000016A  E8 00000000 E   *	    call   SetDlgItemTextA
										invoke	EnableWindow,buthwnd,FALSE
 0000016F  6A 00	   *	    push   +000000000h
 00000171  FF 75 F4	   *	    push   dword  ptr ss:[ebp]+0FFFFFFF4h
 00000174  E8 00000000 E   *	    call   EnableWindow
									.endif
								.endif																								
 00000179		   *@C0010:
							.endif
 00000179		   *@C000D:
						.elseif	ax==IDABOUT
 00000179  EB 3D	   *	    jmp    @C0011
 0000017B		   *@C0006:
 0000017B  66| 83 F8 66	   *	    cmp    ax, IDABOUT
 0000017F  75 1C	   *	    jne    @C0012
							invoke	DialogBoxParam,hinst,addr abtdlg,hwnd,addr abtdlgproc,0
 00000181  6A 00	   *	    push   +000000000h
 00000183  68 000001C1 R   *	    push   abtdlgproc
 00000188  FF 75 08	   *	    push   dword  ptr ss:[ebp]+000000008h
 0000018B  68 000000CD R   *	    push   OFFSET abtdlg
 00000190  FF 35 00000000 R *	    push   hinst
 00000196  E8 00000000 E   *	    call   DialogBoxParamA
						.elseif	ax==IDEXIT
 0000019B  EB 1B	   *	    jmp    @C0014
 0000019D		   *@C0012:
 0000019D  66| 83 F8 02	   *	    cmp    ax, IDEXIT
 000001A1  75 15	   *	    jne    @C0015
							invoke	EndDialog,hwnd,0
 000001A3  6A 00	   *	    push   +000000000h
 000001A5  FF 75 08	   *	    push   dword  ptr ss:[ebp]+000000008h
 000001A8  E8 00000000 E   *	    call   EndDialog
						.endif
					.else
 000001AD  EB 09	   *	    jmp    @C0017
 000001AF		   *@C0004:
 000001AF  B8 00000000				mov	eax,FALSE
						ret
 000001B4  C9		   *	    leave  
 000001B5  C2 0010	   *	    ret    00010h
					.endif
 000001B8		   *@C0017:
 000001B8		   *@C0003:
 000001B8		   *@C0015:
 000001B8		   *@C0014:
 000001B8		   *@C0011:
 000001B8		   *@C000A:
 000001B8  B8 00000001			mov	eax,TRUE
					ret
 000001BD  C9		   *	    leave  
 000001BE  C2 0010	   *	    ret    00010h
 000001C1			dlgproc	endp			                                 

 000001C1			abtdlgproc	proc hwnd:HWND,uMsg:UINT,wparam:WPARAM,lparam:LPARAM
 000001C1  55		   *	    push   ebp
 000001C2  8B EC	   *	    mov    ebp, esp
					.if	uMsg==WM_COMMAND
 000001C4  81 7D 0C
	   00000111	   *	    cmp    uMsg, WM_COMMAND
 000001CB  75 15	   *	    jne    @C0018
 000001CD  8B 45 10				mov	eax,wparam
						.if	ax==IDOK1
 000001D0  66| 83 F8 67	   *	    cmp    ax, IDOK1
 000001D4  75 15	   *	    jne    @C001A
							invoke	EndDialog,hwnd,0
 000001D6  6A 00	   *	    push   +000000000h
 000001D8  FF 75 08	   *	    push   dword  ptr ss:[ebp]+000000008h
 000001DB  E8 00000000 E   *	    call   EndDialog
						.endif
					.else
 000001E0  EB 09	   *	    jmp    @C001C
 000001E2		   *@C0018:
 000001E2  B8 00000000				mov	eax,FALSE
						ret
 000001E7  C9		   *	    leave  
 000001E8  C2 0010	   *	    ret    00010h
					.endif
 000001EB		   *@C001C:
 000001EB		   *@C001A:
 000001EB  B8 00000001			mov	eax,TRUE
					ret
 000001F0  C9		   *	    leave  
 000001F1  C2 0010	   *	    ret    00010h
 000001F4			abtdlgproc	endp								
				end	start	                 
